{"pageProps":{"post":{"title":"Hexo를 이용한 github 블로그 생성하기","slug":"blog-hexo","date":"2021-09-24","content":"<blockquote>\n<p>Hexo 프레임워크를 이용해 블로그를 작성하고, github에 자동 deploy 까지</p>\n</blockquote>\n<h2>설치하기</h2>\n<pre><code>npm install hexo-cli -g\nnpm run server\n</code></pre>\n<p>https://hexo.io/\nhttps://github.com/ppoffice/hexo-theme-hueman</p>\n<h3>github 연동하기</h3>\n<p><strong>Project > Settigns > GitHub Pages</strong>\nBranch: main</p>\n<p>hexo deploy 를 하면, 마크다운 문서를 파싱하면서 배포파일을 만들어주는데 이 파일이 실제 웹 브라우저에서 보여져야할 파일이므로 이 역할을 기본 브랜치(main)에서 할 수 있도록 main 으로 적용했다.\n블로그 작성은 develop 브랜치를 둔다.</p>\n<p><strong>Project > Settings > Secrets > Actions</strong></p>\n<p>HEXO_DEPLOY_TOKEN 이름으로 토큰을 등록한다.\n여기서의 토큰은 아래에서 받은 액세스 토큰을 사용한다.</p>\n<p><strong>Account Settings > Developer settings > Personal access tokens</strong></p>\n<p>기간을 설정하면, 새로운 토큰을 발급하는데 이 발급된 토큰을 등록해준다.</p>\n<p><img src=\"/images/post/token1.png\" alt=\"토큰 생성(1)\"></p>\n<p><img src=\"/images/post/token2.png\" alt=\"토큰 생성(2)\"></p>\n<p>참고: https://hyeo-noo.tistory.com/184</p>\n<p>*<strong>*주기적으로 Actions 토큰을 업데이트 해준다.</strong>  *<strong>*Mac 에서는 cmd + space > keychain 접근에서 github.com 은 모두 삭제해준 후에 IDE에서 토큰을 재등록해준다.</strong></p>\n<h3>github deploy 등록하기</h3>\n<p><strong>Project > Actions</strong>\nworkflow 를 자동으로 생성할 수 있게 많이 제공하지만, 일단 'and set up a workflow yourself' 를 클릭해서 개별 스크립트를 작성해준다.</p>\n<p>develop 디렉토리에 push 되었을 때, deploy 할 수 있게 만든다.\n<code>GITHUB_TOKEN</code>은 위에서 만든 HEXO_DEPLOY_TOKEN 변수를 적용해준다.</p>\n<pre><code>// develop.yml\n\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n    steps:\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n      - name: Checkout source\n        uses: actions/checkout@v2\n      - name: Use Node.js 16\n        uses: actions/setup-node@v2\n        with:\n          node-version: 16\n          cache: 'npm'\n      - name: Before install\n        run: npm i -g hexo\n      - name: Before script\n        env:\n          GITHUB_TOKEN: ${{ secrets.HEXO_DEPLOY_TOKEN  }}\n        run: |\n          git config --global user.email [user_email]\n          git config --global user.name [user_name]]\n          sed -i \"s/__GITHUB_TOKEN__/${GITHUB_TOKEN}/\" _config.yml\n      - name: NPM install\n        run: |\n          npm install\n      - name: Hexo deploy\n        run: |\n          hexo clean\n          hexo generate\n          hexo deploy\n</code></pre>\n<p>참고: https://blog.hodory.dev/2019/08/23/deploy-hexo-blog-with-github-actions/</p>\n<p>Actions 실행되는 스크립트는 config 파일의 deploy 변수를 제대로 걸어주지 못하면, 아래와 같은 오류를 만나게 된다.</p>\n<blockquote>\n<p>fatal: could not read Password for 'https://jelee603@github.com': No such device or address</p>\n<p>해결 방법:\n등록된 토큰을 확인하고, 아래와 같이 변수를 추가해준다.</p>\n<pre><code>// _config.yml\ndeploy: type: git;\n//__GITHUB_TOKEN__@github.com/[user_name]/[user_name].github.io.git\nrepo: https: branch: main;\n</code></pre>\n</blockquote>\n<p>위와 같이 작성하고, push 를 하게 되면, build 가 시작되고 정상적으로 완료되면, 블로그에 반영이 된다!</p>\n<h3>Generate 포매터 변경</h3>\n<p><code>scaffolds > post.md</code>에 필요한 포맷을 넣어두면 파일이 생성될 때, 자동으로 들어간다.</p>\n<p>기본 포맷은 날짜형태가 중괄호 문법으로 들어가 있는데, 자동완성으로 코드가 변경되면 이 포맷이 깨지게 된다.</p>\n<pre><code>// 원본 \ntitle: {{ title }}\ndate: {{ date }}\n\n// 자동 변경\ntitle: { { title } }\ndate: { { date } }\n</code></pre>\n<p>이렇게 저장되는 것을 방지하려면, 마크다운 파일의 경우에만 자동저장 기능을 꺼준다.</p>\n<pre><code>//settings.json\n\n\"[markdown]\": {\n    \"editor.formatOnSave\": false,\n}\n</code></pre>\n<h2>글쓰기 (마크다운)</h2>\n<ul>\n<li>post 파일 생성 방법</li>\n</ul>\n<pre><code>// new post\nhexo new [layout] &#x3C;title>\nhexo server\nex) hexo new &#x3C;title>\n\n// draft\nhexo new draft &#x3C;title>\nhexo server --draft\n</code></pre>\n<ul>\n<li>마크다운 하이퍼링크 연결\n알파벳은 반드시 소문자만 가능\n띄어쓰기는 -(하이픈)으로 구분</li>\n</ul>\n<h4>Reference</h4>\n<ul>\n<li>https://hexo.io/ko/docs/writing.html</li>\n<li>https://www.w3schools.io/file/markdown-cheatsheet</li>\n<li>https://ko.wikipedia.org/wiki/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4#%EB%AC%B8%EB%B2%95</li>\n<li>https://young-cow.tistory.com/21</li>\n</ul>\n","category":"ToyProject"}},"__N_SSG":true}