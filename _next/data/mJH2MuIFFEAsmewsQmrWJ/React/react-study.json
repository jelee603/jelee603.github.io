{"pageProps":{"post":{"title":"자주쓰는 리액트 방법","slug":"react-study","date":"2024.02.17","content":"<p>리액트를 공부하면서 매번 찾아보게 되는 것이 몇가지 있다. \n정리해서 적어본다.</p>\n<h3>1. 리액트에서 왜 key를 써야하지?</h3>\n<p>&quot;리액트는 뷰에 변화가 있을 때, 구 가상 DOM과 새 가상 DOM을 비교하여 변경된 내용만 DOM에 적용한다.&quot; 이게 핵심 포인트이다. \n반복문을 돌렸을 때, 같은 key를 가지고 있으면 리액트는 변화가 없다 판단하고, 업데이트를 하지 않는다. \n만약에 key를 인덱스로 사용하면, 항목 순서가 바뀔 때 마다 key도 같이 변경된다. \n업데이트로 인해, 변화가 필요한 경우가 아니라면 key를 고유한 값으로 인지할 수 있도록 하자. </p>\n<p>참고: <a href=\"https://charles098.tistory.com/204\">재조정과 key 사용 이유</a></p>\n<h3>2. 타입스크립트의 제네릭을 사용하는 방법</h3>\n<p>제네릭은 타입을 사용자에게 맡기고 코드를 작성할 때 선언할 수 있게 해준다. \n함수에서 동작은 같지만, 리턴 받아야하는 타입이 다른 경우에 유용한데 아직 어렵다.</p>\n<pre class = \"line-numbers\"><code class = \"language-js\"><span class=\"token keyword\">const</span> <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">input</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function-variable function\">T</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> input <span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>output<span class=\"token operator\">&lt;</span>boolean<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code></pre><p>참고: <a href=\"https://charles098.tistory.com/165\">인터페이스와 제네릭</a></p>\n<h3>3. MSW를 사용한 모킹을 쉽게 하는 방법</h3>\n<p>실제 API 주소를 호출하면 중간에 모킹서버가 이 호출을 가로채 자기의 MOCK 데이터를 내려주는 방법이다. \n이 방법은 실제 따라하기를 하면, service 에 http 메서드를 호출할 수 있도록 미들웨어를 만들고, 호출할 수 있게 세팅을 해주면 된다.<br>response 타입을 지정할 때 2번의 제네릭을 활용하면, 더 깔끔하게 코드를 작성할 수 있다. </p>\n<p>참고: </p>\n<ul>\n<li><a href=\"https://mswjs.io/docs/integrations/browser\">MSW 공식</a></li>\n<li><a href=\"https://ryuhojin.tistory.com/46\">API 모킹 쉽고 빠르게 활용하는 방법</a></li>\n<li><a href=\"https://velog.io/@yyeonggg/Typescript%EB%A1%9C-%EB%8D%94-%EA%B9%94%EB%81%94%ED%95%98%EA%B2%8C-Axios-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0\">Typescript로 더 깔끔하게 Axios 사용해보기</a></li>\n</ul>\n<h3>4. 라디오 셀렉트 박스를 만들 때, 스타일만으로도 가능할까?</h3>\n<pre class = \"line-numbers\"><code class = \"language-js\">\n<span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">e</span><span class=\"token operator\">:</span> MouseEvent</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>defaultPrevented<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                state<span class=\"token punctuation\">.</span><span class=\"token function\">setSelectedValue</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre><p>참고: <a href=\"https://github.com/adobe/react-spectrum/issues/4971\">더블 클릭시, 라디오 버튼 체크 푸는 방법</a></p>\n<h3>5. 폼을 만드는 이유</h3>\n<p>&quot;form&quot;은 데이터를 수집하는 컨테이너이고, &quot;input&quot;은 사용자로부터 실제로 데이터를 입력하는 데 사용되는 요소라 서로 다른 역할을 한다. </p>\n<p>참고: </p>\n<ul>\n<li><a href=\"https://medium.com/@ketchasso72/how-to-handle-forms-in-react-the-easy-way-to-do-it-8a6805c7c1d5\">폼을 쉽게 만드는 방법</a></li>\n<li><a href=\"https://dealicious-inc.github.io/2022/07/25/ss-studio.html\">react-hook-form</a></li>\n</ul>\n<h3>6. 테스트는 어떻게 시작하지?</h3>\n<p>유저 이벤트 테스트를 하는 방법부터 시작을 해볼까한다. \n위에 폼 만드는 방법으로 양식을 입력받고 userEvent를 발생시켜 동작시켜본다. </p>\n<p>테스트를 설정하는데 가장 힘든건 i18n을 적용했을 때가 아닐까, 다국어를 표현하기 위한건데 어떻게 테스트를 하지?라고 막막했지만 값을 비교하는게 아니라 호출하는 그 변수명을 그대로 string 으로 비교하는 것이었다. 그런데 이건 까다롭게도 jest에서 사용하려면 설정을 해줘야한다. </p>\n<pre class = \"line-numbers\"><code class = \"language-js\"><span class=\"token comment\">// given</span>\n<span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// when</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// then </span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><p>참고: </p>\n<ul>\n<li><a href=\"https://www.daleseo.com/testing-library-user-agent\">유저 이벤트 테스트</a></li>\n<li><a href=\"https://github.com/jsdom/whatwg-url/issues/209#issuecomment-1015559283\">TextEncoder is not defined</a></li>\n<li><a href=\"https://velog.io/@yooha9621/nodejest%EC%97%90%EC%84%9C-import%EA%B0%80-%EC%95%88%EB%90%98%EB%8A%94-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">Jest에서 import가 안되는 오류 해결방법</a></li>\n</ul>\n<h3>7. Yarn Berry란?</h3>\n<p>yarn berry는 당황할 수 밖에 없었다. node_modules 폴더는 온데간데 없고, .yarn/cache 폴더가 생기고 그로 인해 파생되는 몇가지 설정들이 여간 복잡한게 아니었다. 하지만, 더 빠른 퍼포먼스인 것은 확실했다. 설치 속도가 너무 빨랐으니.</p>\n<p>참고: </p>\n<ul>\n<li><a href=\"https://velog.io/@seokunee/Yarn-Berry%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90\">Yarn Berry를 사용해보자</a></li>\n<li><a href=\"https://kimyanglogging.tistory.com/7\">yarn berry + Next.js + Typescript</a></li>\n</ul>\n<h3>8. 시멘틱 마크업은 매번 헷갈리는데 외울까?</h3>\n<p>header/aside/main(article/section)/footer</p>\n<p>참고: <a href=\"https://brunch.co.kr/@tigrisdesign/7\">알아두면 쓸모 있는 시멘틱 마크업</a></p>\n<h3>9. 객체를 타입으로 변환하는 방법은?</h3>\n<p>참고: </p>\n<ul>\n<li><a href=\"https://inpa.tistory.com/entry/TS-%F0%9F%93%98-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-keyof-typeof-%EC%82%AC%EC%9A%A9%EB%B2%95\">keyof/typeof 사용법</a></li>\n<li><a href=\"https://fe-developers.kakaoent.com/2022/221124-typescript-tip/\">union type, intersection type</a></li>\n</ul>\n<h3>10. useState props에 타입스크립트 타입을 지정하는 방법</h3>\n<pre class = \"line-numbers\"><code class = \"language-js\"><span class=\"token comment\">// element event 사용할 때</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ChangeEvent<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ComponentProps</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">e</span><span class=\"token operator\">:</span> ChangeEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// useState props 사용할 때</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Dispatch<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ComponentProps</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">setState</span><span class=\"token operator\">:</span> Dispatch<span class=\"token operator\">&lt;</span>boolean<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code></pre>","category":"React","coverImage":"images/cover/default.png"},"posts":[{"slug":"react-study","title":"자주쓰는 리액트 방법","date":"2024.02.17","coverImage":"images/cover/default.png","category":"React"},{"slug":"what-zsh","title":"iTerms2 + ZSH 사용하기","date":"2023.12.02","coverImage":"images/cover/default.png","category":"Tip"},{"slug":"youtube-ab180-2023","title":"컨퍼런스 정리(2) - 몇 천 페이지의 유저 가이드를 새로 만들며","date":"2023.11.15","coverImage":"images/cover/youtube-ab180-2023.png","category":"React"},{"slug":"youtube-flex-2021","title":"컨퍼런스 정리(1) - 왜 나는 React를 사랑하는가","date":"2023.11.09","coverImage":"images/cover/react-flex.png","category":"React"},{"slug":"git-commit","title":"Git Commit 메시지 작성법","date":"2023.09.13","coverImage":"images/cover/default.png","category":"Tip"},{"slug":"testing-vanilla","title":"Vanilla JS Jest 적용해보기","date":"2023.09.06","coverImage":"images/cover/default.png","category":"JavaScript"},{"slug":"css-variable","title":"CSS 변수","date":"2023.09.02","coverImage":"images/cover/default.png","category":"HTML_CSS"},{"slug":"css-position","title":"CSS Position absolute vs fixed","date":"2023.09.01","coverImage":"images/cover/default.png","category":"HTML_CSS"},{"slug":"css-safari","title":"사파리 브라우저에서의 스크롤바 동작 없애기","date":"2023.09.01","coverImage":"images/cover/default.png","category":"HTML_CSS"},{"slug":"react-style-component","title":"React 스타일 컴포넌트 다루기","date":"2023.09.01","coverImage":"images/cover/default.png","category":"React"},{"slug":"web-lighthouse","title":"Next.js 성능 측정","date":"2023.08.28","coverImage":"images/cover/default.png","category":"React"},{"slug":"next-portal","title":"Next.js Portal 만들기","date":"2023-08-29","coverImage":"/images/cover/default.png","category":"React"},{"slug":"css-semantic","title":"시맨틱 태그 (Semantic Tag)","date":"2023-08-24","coverImage":"/images/cover/default.png","category":"HTML_CSS"},{"slug":"blog-next","title":"Next.js로 마크다운 블로그 만들기","date":"2023-08-22","coverImage":"/images/cover/blog_next.png","category":"ToyProject"},{"slug":"css-unit","title":"CSS 단위","date":"2023-08-21","coverImage":null,"category":"HTML_CSS"},{"slug":"hello-world","title":"Hello","date":"2023-08-16"},{"slug":"shortcut-mac","title":"Mac을 편하게 사용하는 방법 7가지","date":"2022-04-06 23:00:14","coverImage":"/images/cover/shortcut-mac.png","category":"Tip"},{"slug":"react-native","title":"React Native","date":"2022-03-17 14:00:00","coverImage":"/images/cover/react-native.png","category":"React"},{"slug":"modern-js","title":"모던 자바스크립트 새로운 기능","date":"2022-01-27 23:47:36","coverImage":"/images/cover/modern-js.png","category":"JavaScript"},{"slug":"codespitz-86","title":"코드스피츠 [객체지향 자바스크립트] 돌아보기","date":"2022-01-27 21:11:37","coverImage":"/images/cover/codespitz.png","category":"JavaScript"},{"slug":"eslint-prettier","title":"VSCode 에서 ESLint와 Prettier 설정방법","date":"2022-01-15 17:05:58","coverImage":"/images/cover/eslint-prettier.png","category":"Tip"},{"slug":"typescript-config","title":"TSConfig 설정방법","date":"2022-01-14 16:14:08","coverImage":"/images/cover/typescript-config.png","category":"TypeScript"},{"slug":"react-cypress","title":"React에 Cypress 적용하기","date":"2022-01-14 13:58:02","coverImage":"/images/cover/react-cypress.png","category":"React"},{"slug":"react-runtime-error","title":"React 환경세팅에서 만난 오류들","date":"2021-12-28 14:57:17","coverImage":"/images/cover/react-runtime-error.png","category":"React"},{"slug":"browser-operation","title":"브라우저 동작 원리","date":"2021-12-01 21:59:43","coverImage":"/images/cover/browser-operation.png","category":"HTML_CSS"},{"slug":"react-redux","title":"React와 Redux","date":"2021-11-26 13:45:56","coverImage":"/images/cover/react-redux.png","category":"React"},{"slug":"css-selectors","title":"CSS 선택자","date":"2021-11-12 15:12:23","coverImage":"/images/cover/css-selectors.png","category":"HTML_CSS"},{"slug":"html-span","title":"HTML <span> 요소","date":"2021-11-12 15:08:11","coverImage":"/images/cover/html-span.png","category":"HTML_CSS"},{"slug":"create-thumbnail","title":"썸네일 이미지 생성","date":"2021-11-10 17:55:44","coverImage":"/images/cover/create-thumbnail.png","category":"ToyProject"},{"slug":"react-migration","title":"React 기존 프로젝트에 타입스크립트 마이그레이션","date":"2021-11-05 00:22:39","coverImage":"/images/cover/react-migration.png","category":"React"},{"slug":"react-vac","title":"React VAC Pattern","date":"2021-11-01 16:57:17","coverImage":"/images/cover/react-vac.png","category":"React"},{"slug":"typescript","title":"TypeScript 스터디","date":"2021-11-01 14:27:36","coverImage":"/images/cover/typescript.png","category":"TypeScript"},{"slug":"vanilla","title":"Vanilla JS 다뤄보기","date":"2021-10-30 23:20:00","coverImage":"/images/cover/vanilla.png","category":"JavaScript"},{"slug":"yarn","title":"Yarn","date":"2021-10-17 15:31:01","coverImage":"/images/cover/yarn.png","category":"JavaScript"},{"slug":"port","title":"Mac에서 Port 종료하기","date":"2021-10-10 23:31:07","coverImage":"/images/cover/port.png","category":"Tip"},{"slug":"react-condition","title":"React 조건부 렌더링","date":"2021-10-03 18:38:26","coverImage":"/images/cover/react-condition.png","category":"React"},{"slug":"load-map","title":"로드맵","date":"2021-09-24 14:39:08","coverImage":"/images/cover/default.png","category":"ToyProject"},{"slug":"blog-hexo","title":"Hexo를 이용한 github 블로그 만들기","date":"2021-09-24","coverImage":"/images/cover/blog-hexo.png","category":"ToyProject"},{"slug":"good-image","title":"good-image","date":"2021-09-13 12:59:37","coverImage":"/images/cover/study.png"},{"slug":"es6","title":"ES6 문법","date":"2020-02-04","coverImage":"/images/cover/es6.png","category":"JavaScript"},{"slug":"sass","title":"Sass(SCSS) 알아가기","date":"2020-01-22","coverImage":"/images/cover/sass.png","category":"HTML_CSS"},{"slug":"vscode","title":"VS Code 활용하기","date":"2020-01-09","coverImage":"/images/cover/vscode.png","category":"Tip"},{"slug":"storage","title":"Local & Session Storage","date":"2019-11-01","coverImage":"/images/cover/storage.png","category":"HTML_CSS"},{"slug":"testing-vue","title":"Vue.js 2.x 테스트 적용기","date":"2019-10-17","coverImage":"/images/cover/testing-vue.png","category":"Vue"},{"slug":"graphql","title":"Graphql 적용기","date":"2019-10-16","coverImage":"/images/cover/graphql.png","category":"JavaScript"},{"slug":"blob","title":"Load Image File","date":"2019-10-10","coverImage":"/images/cover/blob.png","category":"JavaScript"},{"slug":"d3","title":"D3 필요한 메서드 정리해보자","date":"2019-10-01","coverImage":"/images/cover/d3.png","category":"JavaScript"},{"slug":"settings","title":"개발환경 세팅하기","date":"2019-09-26","coverImage":"/images/cover/settings.png","category":"Tip"},{"slug":"pattern","title":"Javascript 디자인패턴 이야기","date":"2019-09-11","coverImage":"/images/cover/pattern.png","category":"JavaScript"},{"slug":"promise","title":"Javascript Promise 이야기","date":"2019-08-28","coverImage":"/images/cover/promise.png","category":"JavaScript"},{"slug":"event","title":"Javascript Event 이야기","date":"2019-08-22","coverImage":"/images/cover/event.png","category":"JavaScript"},{"slug":"object","title":"Javascript Object 이야기","date":"2019-08-21","coverImage":"/images/cover/object.png","category":"JavaScript"},{"slug":"browser","title":"Browser 이야기","date":"2019-08-19","coverImage":"/images/cover/browser.png","category":"HTML_CSS"},{"slug":"array","title":"Javascript Array 이야기","date":"2019-08-18","coverImage":"/images/cover/array.png","category":"JavaScript"},{"slug":"css-grid-flex","title":"Grid 와 Flex 사용법","date":"2019-08-16","coverImage":"/images/cover/css-grid-flex.png","category":"HTML_CSS"},{"slug":"vuejs","title":"Vue 이야기","date":"2019-08-14","coverImage":"/images/cover/vue-js.png","category":"Vue"},{"slug":"npm","title":"NPM","date":"2019-08-09","coverImage":"/images/cover/npm.png","category":"JavaScript"},{"slug":"git","title":"안 쓰면 잊어버리는 Git 명령어","date":"2019-08-08","coverImage":"/images/cover/git.png","category":"Tip"},{"slug":"blog-jekyll","title":"Jekyll을 이용한 github 블로그 만들기","date":"2019-08-07","coverImage":"/images/cover/blog-jekyll.png","category":"ToyProject"},{"slug":"canvas","title":"Canvas로 그래프 그리기","date":"2019-06-10","coverImage":"/images/cover/canvas.png","category":"HTML_CSS"}]},"__N_SSG":true}