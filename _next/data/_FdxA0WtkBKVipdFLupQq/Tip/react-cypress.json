{"pageProps":{"post":{"title":"React에 Cypress 적용하기","slug":"react-cypress","date":"2022-01-14 13:58:02","content":"<p>이 글은 Cypress 블로그의 <a href=\"https://www.cypress.io/blog/2021/04/06/cypress-component-testing-react\">원문</a>을 직역해서 <a href=\"https://github.com/jelee603/cypress-testing-example\">실습</a>하기 위해 작성했습니다.</p>\n<!-- more -->\n<h2>Cypress 시작하기</h2>\n<p>Cypress7.0 중, Cypress와 함께 패키지로 묶은 새로운 컴포넌트입니다.\n이것은 테스팅을 실행으로부터 만드는 법을 배우고, <code>experimentalComponentTesting</code> 플래그가 숨겨져 있습니다.</p>\n<p>블로그의 이 글에서는 타입스크립트를 사용한 새로운 리액트 앱을 통해 리액트를 생성하고 Cypress 컴포넌트 테스트 러너를 설치하는 방법을 볼 수 있을 것입니다.</p>\n<p>블로그에 사용된 예제코드는 <a href=\"https://github.com/lmiller1990/cypress-react-template\">여기</a>서 얻을 수 있습니다.</p>\n<h2>새 리액트 프로젝트 생성</h2>\n<p>새로운 리액트는 만드는 법을 시작합니다. 옵션으로 타입스크립트를 추가합니다. - 이 예제를 사용할 것입니다.</p>\n<pre><code>yarn create react-app cypress-test-react --template typescript\n</code></pre>\n<h2>Cypress 컴포넌트 테스트 러너를 구성하는 방법</h2>\n<p>리액트 프로젝트를 한번 얻고, Cypress 설치와 웹팩 DevServer 와 리액트 어댑터를 설치합니다.</p>\n<p>리액트 앱 프로젝트는 웹팩 기반에 있습니다. 웹팩 어댑터와 연관된 설치중입니다.\n또한 <code>@cypress/react</code> 필요하고, 컴포넌트(<code>mount</code>하기 위해 비슷한 Enzyme 또는 테스팅 라이브러리에 <code>render</code>)들과 상호적으로 붙일 수 있는 방법이 우선입니다.</p>\n<pre><code>yarn add cypress @cypress/react @cypress/webpack-dev-server --dev\n</code></pre>\n<p>다음, 기본 설정을 위해 <code>cypress.json</code> 만듭니다:</p>\n<pre><code>{\n  &quot;component&quot;: {\n    &quot;testFiles&quot;: &quot;**/*.test.{js,ts,jsx,tsx}&quot;,\n    &quot;componentFolder&quot;: &quot;src&quot;\n  }\n}\n</code></pre>\n<p>여기에 몇가지 컴포넌트 테스팅 상세 옵션을 추가하고, 앞으로는 <code>&quot;component&quot;</code> 키를 사용합니다.\n<code>&quot;componentFolder&quot;</code>에 모든 컴포넌트와 테스트들이 위치하고 <code>&quot;testFiles&quot;</code>은 테스트파일을 찾기위한 패턴입니다.</p>\n<p>마지막으로 컴포넌트 테스트를 위해 <code>@cypress/webpack-dev-server</code>가 필요합니다.\n플러그인은 <a href=\"https://docs.cypress.io/guides/tooling/plugins-guide#Installing-plugins\">Cypress 문서</a>가 상세하게 설명합니다.\n기본 플러그인은 <code>cypress/plugins/index.js</code> 부터 로드 됩니다. 파일을 만들고 추가합니다:</p>\n<pre><code>// cypress/plugins/index.js\n\nconst injectDevServer = require(&quot;@cypress/react/plugins/react-scripts&quot;)\n\nmodule.exports = (on, config) =&gt; {\n  injectDevServer(on, config)\n  return config\n}\n</code></pre>\n<p>이것은 Cypress 웹팩 Dev Server를 사용하기 위해 웹팩과 같은 설정으로 리액트 앱을 사용합니다.</p>\n<p>다른 템플릿을 사용한다면, Next.js 같은, 몇가지 다른 유용한 어댑터를 가져야합니다.</p>\n<p>또한 1개의 어댑터를 만드는게 가능합니다.</p>\n<h2>테스트 작성법</h2>\n<p>Cypress 를 사용하기 위해, <code>src/App.test.tsx</code> 이동시켜, 리액트 앱 템플릿으로 가져옵니다.\n간단한 이동입니다:</p>\n<pre><code>// src/App.test.tsx\n\nimport React from &#39;react&#39;;\nimport { mount } from &#39;@cypress/react&#39;;\nimport App from &#39;./App&#39;;\n\nit(&#39;renders learn react link&#39;, () =&gt; {\n  mount(&lt;App /&gt;);\n  cy.get(&#39;a&#39;).contains(&#39;Learn React&#39;);\n});\n</code></pre>\n<p>대부분의 테스트는 <code>@cypress/react</code> 로 부터 <code>mount</code>할 때 시작할 것입니다. 테스트 라이브러리의 <code>render</code>와 유사합니다. 컴포넌트가 한번 마운트되면, Cypress의 확장된 올바른 행동을 확인하기 위한<a href=\"https://docs.cypress.io/api/table-of-contents\">query and assertion APIs</a> 를 사용할 수 있습니다.\n이 예제는 <code>&quot;Learn React&quot;</code> 렌더되었다고 확증할 수 있습니다.</p>\n<p>테스트 러너에서 Cypress 컴포넌트를 실행하세요:</p>\n<pre><code>yarn cypress open-ct\n</code></pre>\n<p>그리고 왼쪽 트리구조에서 스펙을 선택하세요.</p>\n<p>변경되도록 해보세요 - 테스트는 즉각 재실행됩니다. 오로지 즉각적인 것은 아닙니다. 테스트가 통과되거나 실패 되었다면, 시각적으로 점검하고 디버그가 가능합니다.</p>\n<p><code>yarn cypress run-ct</code>로 모든 스펙들은 실행할 수 있습니다. CI 환경, 또는 코드 커밋과 푸시 전에 마지막 체크에서 테스트들의 실행하기에 유용합니다.</p>\n<h2>논의</h2>\n<p>Cypress 컴포넌트 테스트 러너는 jsdom 기반의 테스팅 환경(예를 들어, jest 와 Vue Test Utils)의 대안책입니다. 많은 장점을 제안합니다:</p>\n<ul>\n<li>실제 브라우저에서 실행됩니다. 이 의미는 테스트가 유저에게 더 가까운 경험이 될 것입니다.</li>\n<li>비주얼. 무엇이 렌더되었는지 볼 수 있습니다. 더이상 무엇이 렌더되거나 디버그인지 찾으며 수수께끼 터미널 로그를 스크롤링 하지 않아도 됩니다. - 단지 devtools 과 브라우저 DOM 을 열면 됩니다.</li>\n<li>Cypress 의 힘 - 가장 인기있고 의지할 수 있는 E2E 테스팅이 있습니다.</li>\n</ul>\n<p>또한 디자인 환경이 2배입니다. 즉시 반영과 가까운 인스턴스 피드백을 주고 발전되는 것을 볼 수 있습니다.\n이것은 점진적으로 테스트 기반 jest 가 아니고, Storybook 디자인 기반 잘 되어진 환경입니다.</p>\n<p>여전히 알파버전이지만, 빠르게 발전하고 있고 컴포넌트 테스팅의 지표를 바꿀 것을 약속합니다.</p>\n<h2>결론</h2>\n<p>컴포넌트 테스팅을 위한 큰 Cypress 를 가져옵니다. 아래 어댑터 이래로, 웹팩과 같은, 테스트 전체를 버릴 필요는 없습니다. - 마이그레이션을오 가능합니다.</p>\n<p>시각적인 측면은 단위 테스트과 단독 툴 디자인입니다. 엉망인 콘솔 결과를 잡아내던 시절은 끝났습니다. - 테스트 실행으로 어떤 컴포넌트인지 볼 수 있습니다.</p>\n<p>블로그의 코드는 <a href=\"https://github.com/lmiller1990/cypress-react-template\">여기</a>에서 볼 수 있습니다.</p>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://www.cypress.io/blog/2021/04/06/cypress-component-testing-react\">https://www.cypress.io/blog/2021/04/06/cypress-component-testing-react</a></li>\n</ul>\n","category":"React"},"posts":[{"slug":"css-semantic","title":"시맨틱 태그 (Semantic Tag)","date":"2023-08-24","coverImage":"/images/cover/default.png","category":"HTML_CSS"},{"slug":"react-portal","title":"React Portal","date":"2023-08-24","coverImage":"/images/cover/default.png","category":"React"},{"slug":"blog-next","title":"Next.js로 마크다운 블로그 만들기","date":"2023-08-22","coverImage":"/images/cover/blog_next.png","category":"ToyProject"},{"slug":"css-unit","title":"CSS 단위","date":"2023-08-21","coverImage":null,"category":"HTML_CSS"},{"slug":"hello-world","title":"Hello","date":"2023-08-16"},{"slug":"shortcut-mac","title":"Mac을 편하게 사용하는 방법 7가지","date":"2022-04-06 23:00:14","coverImage":"/images/cover/shortcut-mac.png","category":"Tip"},{"slug":"react-native","title":"React Native","date":"2022-03-17 14:00:00","coverImage":"/images/cover/react-native.png","category":"React"},{"slug":"modern-js","title":"모던 자바스크립트 새로운 기능","date":"2022-01-27 23:47:36","coverImage":"/images/cover/modern-js.png","category":"JavaScript"},{"slug":"codespitz-86","title":"코드스피츠 [객체지향 자바스크립트] 돌아보기","date":"2022-01-27 21:11:37","coverImage":"/images/cover/codespitz.png","category":"JavaScript"},{"slug":"eslint-prettier","title":"VSCode 에서 ESLint와 Prettier 설정방법","date":"2022-01-15 17:05:58","coverImage":"/images/cover/eslint-prettier.png","category":"Tip"},{"slug":"typescript-config","title":"TSConfig 설정방법","date":"2022-01-14 16:14:08","coverImage":"/images/cover/typescript-config.png","category":"TypeScript"},{"slug":"react-cypress","title":"React에 Cypress 적용하기","date":"2022-01-14 13:58:02","coverImage":"/images/cover/react-cypress.png","category":"React"},{"slug":"react-runtime-error","title":"React에서 만난 오류들","date":"2021-12-28 14:57:17","coverImage":"/images/cover/react-runtime-error.png","category":"React"},{"slug":"browser-operation","title":"브라우저 동작 원리","date":"2021-12-01 21:59:43","coverImage":"/images/cover/browser-operation.png","category":"HTML_CSS"},{"slug":"react-redux","title":"React와 Redux","date":"2021-11-26 13:45:56","coverImage":"/images/cover/react-redux.png","category":"React"},{"slug":"css-selectors","title":"CSS 선택자","date":"2021-11-12 15:12:23","coverImage":"/images/cover/css-selectors.png","category":"HTML_CSS"},{"slug":"html-span","title":"HTML <span> 요소","date":"2021-11-12 15:08:11","coverImage":"/images/cover/html-span.png","category":"HTML_CSS"},{"slug":"create-thumbnail","title":"썸네일 이미지 생성","date":"2021-11-10 17:55:44","coverImage":"/images/cover/create-thumbnail.png","category":"ToyProject"},{"slug":"react-migration","title":"React 기존 프로젝트에 타입스크립트 마이그레이션","date":"2021-11-05 00:22:39","coverImage":"/images/cover/react-migration.png","category":"React"},{"slug":"react-vac","title":"React VAC Pattern","date":"2021-11-01 16:57:17","coverImage":"/images/cover/react-vac.png","category":"React"},{"slug":"typescript","title":"TypeScript 스터디","date":"2021-11-01 14:27:36","coverImage":"/images/cover/typescript.png","category":"TypeScript"},{"slug":"vanilla","title":"Vanilla JS 다뤄보기","date":"2021-10-30 23:20:00","coverImage":"/images/cover/vanilla.png","category":"JavaScript"},{"slug":"yarn","title":"Yarn","date":"2021-10-17 15:31:01","coverImage":"/images/cover/yarn.png","category":"JavaScript"},{"slug":"port","title":"Mac에서 Port 종료하기","date":"2021-10-10 23:31:07","coverImage":"/images/cover/port.png","category":"Tip"},{"slug":"react-condition","title":"React 조건부 렌더링","date":"2021-10-03 18:38:26","coverImage":"/images/cover/react-condition.png","category":"React"},{"slug":"load-map","title":"로드맵","date":"2021-09-24 14:39:08","coverImage":"/images/cover/default.png","category":"ToyProject"},{"slug":"blog-hexo","title":"Hexo를 이용한 github 블로그 만들기","date":"2021-09-24","coverImage":"/images/cover/blog-hexo.png","category":"ToyProject"},{"slug":"good-image","title":"good-image","date":"2021-09-13 12:59:37","coverImage":"/images/cover/study.png"},{"slug":"es6","title":"ES6 문법","date":"2020-02-04","coverImage":"/images/cover/es6.png","category":"JavaScript"},{"slug":"sass","title":"Sass(SCSS) 알아가기","date":"2020-01-22","coverImage":"/images/cover/sass.png","category":"HTML_CSS"},{"slug":"shortcut","title":"단축키 모음","date":"2020-01-09","coverImage":"/images/cover/vscode.png","category":"Tip"},{"slug":"storage","title":"Local & Session Storage","date":"2019-11-01","coverImage":"/images/cover/storage.png","category":"HTML_CSS"},{"slug":"testing-vue","title":"Vue.js 2.x 테스트 적용기","date":"2019-10-17","coverImage":"/images/cover/testing-vue.png","category":"Vue"},{"slug":"graphql","title":"Graphql 적용기","date":"2019-10-16","coverImage":"/images/cover/graphql.png","category":"JavaScript"},{"slug":"blob","title":"Load Image File","date":"2019-10-10","coverImage":"/images/cover/blob.png","category":"JavaScript"},{"slug":"d3","title":"D3 필요한 메서드 정리해보자","date":"2019-10-01","coverImage":"/images/cover/d3.png","category":"JavaScript"},{"slug":"settings","title":"개발환경 세팅하기","date":"2019-09-26","coverImage":"/images/cover/settings.png","category":"Tip"},{"slug":"pattern","title":"Javascript 디자인패턴 이야기","date":"2019-09-11","coverImage":"/images/cover/pattern.png","category":"JavaScript"},{"slug":"promise","title":"Javascript Promise 이야기","date":"2019-08-28","coverImage":"/images/cover/promise.png","category":"JavaScript"},{"slug":"event","title":"Javascript Event 이야기","date":"2019-08-22","coverImage":"/images/cover/event.png","category":"JavaScript"},{"slug":"object","title":"Javascript Object 이야기","date":"2019-08-21","coverImage":"/images/cover/object.png","category":"JavaScript"},{"slug":"browser","title":"Browser 이야기","date":"2019-08-19","coverImage":"/images/cover/browser.png","category":"HTML_CSS"},{"slug":"array","title":"Javascript Array 이야기","date":"2019-08-18","coverImage":"/images/cover/array.png","category":"JavaScript"},{"slug":"css-grid-flex","title":"Grid 와 Flex 사용법","date":"2019-08-16","coverImage":"/images/cover/css-grid-flex.png","category":"HTML_CSS"},{"slug":"vuejs","title":"Vue 이야기","date":"2019-08-14","coverImage":"/images/cover/vue-js.png","category":"Vue"},{"slug":"npm","title":"NPM","date":"2019-08-09","coverImage":"/images/cover/npm.png","category":"JavaScript"},{"slug":"git","title":"안 쓰면 잊어버리는 Git 명령어","date":"2019-08-08","coverImage":"/images/cover/git.png","category":"Tip"},{"slug":"blog-jekyll","title":"Jekyll을 이용한 github 블로그 만들기","date":"2019-08-07","coverImage":"/images/cover/blog-jekyll.png","category":"ToyProject"},{"slug":"canvas","title":"Canvas로 그래프 그리기","date":"2019-06-10","coverImage":"/images/cover/canvas.png","category":"HTML_CSS"}]},"__N_SSG":true}