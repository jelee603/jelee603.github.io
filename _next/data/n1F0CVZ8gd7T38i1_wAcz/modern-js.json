{"pageProps":{"post":{"title":"모던 자바스크립트 새로운 기능","slug":"modern-js","date":"2022-01-27 23:47:36","content":"<p>ES2016 ~ ES2020 까지 자바스크립트의 많은 변화가 있었습니다.\n<a href=\"http://www.yes24.com/Product/Goods/101478466\">모던자바스립트 핵심가이드</a>책이 너무 잘 정리되어있어 책을 보는 것을 추천합니다. 여기엔 자주 사용하는 몇가지 문법만 정리해봅니다.</p>\n<h4>JavaScript</h4>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\">Object.fromEntries()</a></p>\n<p>키/값 쌍이 포함된 배열을 객체로 변환합니다.</p>\n<pre><code>const entries = [['foo', 'v1'], ['baz', 'v2']]\nObject.fromEntries(entries)\n// {foo: 'v1', baz: 'v2'}\n</code></pre>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\">Object.entries()</a></p>\n<p>주어진 객체를 [key, value] 쌍의 배열로 반환합니다.</p>\n<pre><code>const object1 = {\n  a: 'somestring',\n  b: 42\n};\n\nObject.entries(object1).forEach(([k, v] = e)  => console.log(k, v));\n// a somestring\n// b 42\n</code></pre>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/values\">Object.values()</a></p>\n<p>모든 값이 담긴 배열을 반환합니다.</p>\n<pre><code>Object.values(object1)\n// ['somestring', 42]\n</code></pre>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\">Object.seal()</a></p>\n<p>객체의 새로운 속성을 추가할 수 없게 얼려버리는 걸 말합니다. 하지만 <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\">Object.freeze()</a> 과 다르게 데이터 속성값을 변경하는 것은 가능합니다.</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/from\">Array.from()</a></p>\n<p>유사배열객체나 이터러블한 객체를 얕게 복사해 새로운 배열을 생성합니다.</p>\n<pre><code>const arr_like_obj = {\n0: 'a',\n1: 'b',\n2: 'c',\nlength: 3}\n\nArray.from(arr_like_obj)\n// ['a', 'b', 'c']\n</code></pre>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></p>\n<p>자료형을 나타내는 문자열을 반환합니다.</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></p>\n<p>해당 속성이 프로토타입 체인 어딘가에 존재하는지 판별합니다.</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></p>\n<p>항상 고유하며 객체 속성의 식별자로 사용할 수 있습니다.</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\">defineProperties</a></p>\n<p>메서드 객체에 새로운 속성을 정의하거나 기존의 속성을 수정하고 그 객체를 반환합니다.</p>\n<h4>Class</h4>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">private class fields</a></p>\n<p><code>#</code> 해쉬를 추가해 클래스의 속성을 외부에서 호출할 수 없게 만들 수 있습니다.</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Classes/static\">static</a></p>\n<p>클래스의 정적 메서드 키워드입니다. 인스턴스가 아닌 클래스 자체에서 접근할 수 있는 메서드입니다.</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Functions/get\">get</a></p>\n<p>클래스 내에서 설정한 객체를 읽기 전용으로 가져올 수 있습니다.</p>\n<h4>Web API</h4>\n<p>Document에 상속된 가장 일반적인 기본 클래스입니다.\nHTML 태그를 직접 짚어서 사용할 경우에 하위 클래스들의 요소들을 선택할 수 있습니다.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/firstElementChild\">firstElementChild</a></p>\n<p>엘리먼트의 첫번째 자식요소를 반환합니다.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/lastElementChild\">lastElementChild</a></p>\n<p>엘리먼트의 마지막 자식요소를 반환합니다.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\">nextElementSibling</a></p>\n<p>엘리먼트 지정한 요소의 바로 다음 요소를 반환합니다. 지정된 요소가 목록의 마지막 요소일 경우엔 null을 반환합니다.</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Window/requestAnimationFrame\">requestAnimationFrame()</a></p>\n<p>브라우저에게 애니메이션을 호출하는 합수입니다. 실행할 콜백을 인자로 넘겨주면, 리페인트 되기 전에 업데이트 함수를 실행합니다.</p>\n","category":"JavaScript"}},"__N_SSG":true}